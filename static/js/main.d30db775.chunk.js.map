{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Contact/Contact.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","redux/phonebook/actions.js","redux/phonebook/reducer.js","redux/store.js","components/Container/Container.jsx","components/Section/Section.jsx","redux/phonebook/operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","initialState","items","filter","contactsItemsReducer","createReducer","_","payload","state","id","contactsFilterReducer","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","s","container","Section","section","axios","defaults","baseURL","connect","contactsToContactForm","dispatch","onSubmitForm","name","number","contact","post","then","data","catch","error","addContact","useState","setName","setNumber","handleChange","e","currentTarget","value","resetLocalState","onSubmit","preventDefault","normalizedName","toLowerCase","some","alert","form","autoComplete","label","type","pattern","title","required","onChange","input","btn","filterToFilter","onDeleteContact","delete","deleteContact","onClick","getVisibleContacts","normalizedFilter","trim","item","includes","contactsToContactList","contactList","map","contactItem","fetchContactsToApp","get","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d30db775.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__JWen_\",\"input\":\"Filter_input__13CPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__Cbtbi\",\"contactItem\":\"ContactList_contactItem__2APEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__y74ey\",\"btn\":\"Contact_btn__IpsU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__Ng4ze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__lSELd\",\"title\":\"Section_title__kqkAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__6bn-H\",\"label\":\"ContactForm_label__3AMqU\",\"input\":\"ContactForm_input__1s4aq\",\"btn\":\"ContactForm_btn__3QB5A\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const changeFilter = createAction('phonebook/ChangeFilter');\r\n\r\nexport const fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport { addContactSuccess, deleteContactSuccess, changeFilter, fetchContactsSuccess } from './actions';\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: '',\r\n  },\r\n};\r\n  \r\nconst contactsItemsReducer = createReducer(initialState.contacts.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactsFilterReducer = createReducer(initialState.contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: contactsItemsReducer,\r\n  filter: contactsFilterReducer,\r\n});","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport contactsReducer from './phonebook/reducer';\r\n \r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Section;","import axios from 'axios';\r\n\r\nimport {\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  fetchContactsRequest, fetchContactsSuccess, fetchContactsError\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest);\r\n\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest);\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest);\r\n\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/phonebook/operations';\r\n\r\nfunction ContactForm({ contactsToContactForm, onSubmitForm }) {\r\n  const [name,setName] = useState('');\r\n  const [number,setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Проверка на повторный ввод существующего контакта\r\n    const normalizedName = name.toLowerCase();\r\n    contactsToContactForm.some(contact => contact.name.toLowerCase() === normalizedName)\r\n      ?\r\n        alert(`${name} is already in contacts.`)\r\n      : \r\n        onSubmitForm({ name, number });\r\n    resetLocalState();\r\n  };\r\n\r\n  const resetLocalState = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit} \r\n      className={s.form} \r\n      autoComplete=\"off\">\r\n      \r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n            value={name}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n            value={number}\r\n            onChange={handleChange}\r\n            className={s.input}\r\n        />\r\n      </label>        \r\n\r\n      <button type=\"submit\" className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contactsToContactForm: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmitForm: ({ name, number }) => dispatch(addContact({ name, number })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  contactsToContactForm: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n  onSubmitForm: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\nimport { changeFilter } from '../../redux/phonebook/actions';\r\n\r\nfunction Filter({ filterToFilter, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name / number\r\n      <input\r\n        type=\"text\"\r\n        value={filterToFilter}\r\n        onChange={onChange}\r\n        className={s.input}>\r\n      </input>\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filterToFilter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onChange: e => dispatch(changeFilter(e.currentTarget.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  filterToFilter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Contact.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/operations';\r\n\r\nfunction Contact({ name, number, id, onDeleteContact }) { \r\n  return (\r\n    <>\r\n      <p className={s.contact}>• {name}: {number}</p>\r\n      <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: id => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\nimport Contact from '../Contact';\r\n\r\nfunction ContactList({ contactsToContactList }) {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contactsToContactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.contactItem}>\r\n            <Contact\r\n              name={name}\r\n              number={number}\r\n              id={id}>\r\n            </Contact>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n    const normalizedFilter = filter.trim().toLowerCase();\r\n\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter) ||\r\n      item.number.includes(filter.trim())\r\n    );\r\n  };\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contactsToContactList: getVisibleContacts(items, filter),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contactsToContactList: PropTypes.arrayOf(\r\n    PropTypes.shape()).isRequired,\r\n};","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './App.css';\r\nimport Container from './components/Container';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport { fetchContacts } from './redux/phonebook/operations';\r\n\r\nfunction App({ fetchContactsToApp }) {\r\n  useEffect(() => {\r\n    fetchContactsToApp();\r\n  }, [fetchContactsToApp]);\r\n\r\n  return (\r\n    <Container>\r\n      <Section>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n      </Section>\r\n      \r\n      <Section>\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContactsToApp: () => dispatch(fetchContacts())\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n\r\nApp.propTypes = {\r\n  fetchContactsToApp: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}